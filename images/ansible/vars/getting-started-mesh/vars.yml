---
# Ansible config vars - the need for speed
ansible_ssh_pipelining: true
ansible_ssh_extra_args: '-o StrictHostKeyChecking=no -o ControlMaster=auto -o ControlPersist=60s'

# # GCP module env vars
# GCP_AUTH_KIND
# GCP_SERVICE_ACCOUNT_EMAIL
# GCP_SERVICE_ACCOUNT_FILE
# GCP_SCOPES

# GCP vars
gcp_resources_zone: "{{ lookup('ansible.builtin.env', 'GCP_ZONE', default='us-central1-a') }}"
gcp_resources_project: "{{ lookup('ansible.builtin.env', 'GCP_PROJECT', default='red-hat-mbu') }}"

gcp_resources_instances:
  - name: "{{ lab['dublin']['hostname'] }}"
    labels:
      role: "{{ track_slug }}"
      mesh-type: hop
      location: dublin
    machine_type: e2-standard-2
    network_interfaces:
      - access_configs:
        - name: External NAT # yamllint disable-line rule:indentation
          type: ONE_TO_ONE_NAT
    disks:
      - auto_delete: true
        boot: true
        device_name: "{{ lab['dublin']['hostname'] }}"
        initialize_params:
          source_image: "projects/{{ gcp_resources_project }}/global/images/{{ track_slug }}-node"
          disk_size_gb: 20
          disk_type: pd-balanced
    metadata:
      ssh-keys: "{{ lookup('file', '~/.ssh/instruqt/instruqt_provision.pub') }}"
  - name: "{{ lab['jhb']['hostname'] }}"
    labels:
      role: "{{ track_slug }}"
      mesh-type: execution
      location: jhb
    machine_type: e2-standard-2
    network_interfaces:
      - access_configs:
        - name: External NAT # yamllint disable-line rule:indentation
          type: ONE_TO_ONE_NAT
    disks:
      - auto_delete: true
        boot: true
        device_name: "{{ lab['jhb']['hostname'] }}"
        initialize_params:
          source_image: "projects/{{ gcp_resources_project }}/global/images/{{ track_slug }}-node"
          disk_size_gb: 20
          disk_type: pd-balanced
    metadata:
      ssh-keys: "{{ lookup('ansible.builtin.file', '~/.ssh/instruqt/instruqt_provision.pub') }}"
  - name: "{{ lab['raleigh']['hostname'] }}"
    labels:
      role: "{{ track_slug }}"
      mesh-type: controller
      location: raleigh
    machine_type: n2-standard-4
    network_interfaces:
      - access_configs:
        - name: External NAT  # noqa yaml[indentation]
          type: ONE_TO_ONE_NAT
    disks:
      - auto_delete: true
        boot: true
        device_name: "{{ lab['raleigh']['hostname'] }}"
        initialize_params:
          source_image: "projects/{{ gcp_resources_project }}/global/images/rhel9"
          disk_size_gb: 20
          disk_type: pd-balanced
    tags:
      items:
        - https-server
    metadata:
      ssh-keys: "{{ lookup('file', '~/.ssh/instruqt/instruqt_provision.pub') }}"
gcp_inventory_host_vars:
  ansible_user: "{{ admin_username }}"
  ansible_ssh_private_key_file: ~/.ssh/instruqt/instruqt_provision
  ansible_host_key_checking: false
  ansible_python_interpreter: /usr/bin/python3
  ansible_ssh_pipelining: true

gcp_resources_images:
  - name: "{{ lab['jhb']['hostname'] }}-image"
    source_disk:
      selfLink: "https://www.googleapis.com/compute/v1/projects/{{ gcp_resources_project }}/zones/\
        {{ gcp_resources_zone }}/disks/{{ lab['jhb']['hostname'] }}"
    labels:
      role: "{{ track_slug }}"
    description: "{{ track_slug }} - {{ lab['jhb']['hostname'] }} image."
  - name: "{{ lab['dublin']['hostname'] }}-image"
    source_disk:
      selfLink: "https://www.googleapis.com/compute/v1/projects/{{ gcp_resources_project }}/zones/\
        {{ gcp_resources_zone }}/disks/{{ lab['dublin']['hostname'] }}"
    labels:
      role: "{{ track_slug }}"
    description: "{{ track_slug }} - {{ lab['dublin']['hostname'] }} image."
  - name: "{{ lab['raleigh']['hostname'] }}-image"
    source_disk:
      selfLink: "https://www.googleapis.com/compute/v1/projects/{{ gcp_resources_project }}/zones/\
        {{ gcp_resources_zone }}/disks/{{ lab['raleigh']['hostname'] }}"
    labels:
      role: "{{ track_slug }}"
    description: "{{ track_slug }} - {{ lab['dublin']['hostname'] }} image."

# Base mesh lab setup vars
admin_username: rhel
ansible_user: rhel
aap_dir: "/home/{{ ansible_user }}/aap_install"
admin_password: "{{ controller_password }}" # legacy for roles

# code_server role vars
codeserver_username: "{{ student_username }}"
codeserver_password: "{{ student_password }}"
codeserver_authentication: false
codeserver_extensions:
  - name: redhat.ansible

aws_cli_install_package: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip

controller_install_command: "ANSIBLE_BECOME_METHOD='sudo' ANSIBLE_BECOME=True ./setup.sh -e registry_username='{{ registry_username }}' -e registry_password='{{ registry_password }}'" # noqa yaml[line-length]
offline_token: "{{ lookup('ansible.builtin.env', 'REDHAT_OFFLINE_TOKEN') }}"
redhat_username: "{{ lookup('ansible.builtin.env', 'REDHAT_USERNAME') }}"
redhat_password: "{{ lookup('ansible.builtin.env', 'REDHAT_PASSWORD') }}"
registry_username: "{{ redhat_username }}"
registry_password: "{{ redhat_password }}"
# AAP RHEL 9 2.4 SHA
provided_sha_value: f5c834de9ad0b8ddbd0182b8f75127d4857e7c2a136e6c4f66ef5b92b2a41bb9

## Lab-specific vars
# lab_project_name: ACME Corp repo
# lab_project_repo: https://github.com/craig-br/instruqt-track-content/
# lab_project_repo_branch: devel
# lab_credential_name: ACME Corp credential
# lab_us_inventory_name: Raleigh DC
# lab_jhb_inventory_name: Johannesburg DC
# lab_irl_inventory_name: Dublin region
# lab_organization: "ACME Corp"
# lab_execution_environment: Default execution environment
# lab_controller_hostname: raleigh-controller
# lab_inv_group_name: web

controller_validate_certs: false
controller_username: admin
controller_password: "ansible123!"
student_username: student
student_password: learn_ansible

lab:
  project:
    name: ACME Corp repo
    repo:
      url: https://github.com/craig-br/instruqt-track-content/
      branch: devel
  credential:
    name: ACME Corp credential
  s3:
    bucket_name: tmm-instruqt-content.demoredhat.com.private
  dublin:
    hostname: dublin-hop
    inventory:
      name: Dublin region
  jhb:
    hostname: jhb-exec
    inventory:
      name: Johannesburg DC
  raleigh:
    hostname: raleigh-controller
    inventory:
      name: Raleigh DC
  organization: ACME Corp
  execution_environment: Default execution environment

# CoP Collection vars https://github.com/redhat-cop/controller_configuration
controller_configuration_credentials_secure_logging: false
controller_configuration_inventory_source_update_async_retries: 50
controller_configuration_projects_async_retries: 50
controller_configuration_secure_logging: false
controller_configuration_async_retries: 50
controller_configuration_inventory_source_update_async_delay: 5


controller_configuration_dispatcher_roles:
  - {role: settings, var: controller_settings, tags: settings}
  - {role: organizations, var: controller_organizations, tags: organizations}
  - {role: labels, var: controller_labels, tags: labels}
  - {role: users, var: controller_user_accounts, tags: users}
  - {role: teams, var: controller_teams, tags: teams}
  - {role: credential_types, var: controller_credential_types, tags: credential_types}
  - {role: credentials, var: controller_credentials, tags: credentials}
  - {role: credential_input_sources, var: controller_credential_input_sources, tags: credential_input_sources}
  - {role: notification_templates, var: controller_notifications, tags: notification_templates}
  - {role: projects, var: controller_projects, tags: projects}
  - {role: execution_environments, var: controller_execution_environments, tags: execution_environments}
  - {role: applications, var: controller_applications, tags: applications}
  - {role: instance_groups, var: controller_instance_groups, tags: instance_groups}
  - {role: inventories, var: controller_inventories, tags: inventories}
  - {role: project_update, var: controller_projects, tags: projects}
  - {role: inventory_sources, var: controller_inventory_sources, tags: inventory_sources}
  - {role: inventory_source_update, var: controller_inventory_sources, tags: inventory_sources}
  - {role: hosts, var: controller_hosts, tags: hosts}
  - {role: groups, var: controller_groups, tags: inventories}
  - {role: job_templates, var: controller_templates, tags: job_templates}
  - {role: workflow_job_templates, var: controller_workflows, tags: workflow_job_templates}
  - {role: schedules, var: controller_schedules, tags: schedules}
  - {role: roles, var: controller_roles, tags: roles}

controller_collections:
  # - redhat_cop.controller_configuration
  - ansible.posix
  - community.general
  - awx.awx
controller_os_packages:
  - vim
  - git
  - sshpass
  - python3-pip
  - python3-devel
  - ansible-core
  - ansible-navigator
  - gcc
  - bind-utils
  - jq
  - net-tools
  - automation-controller-cli
  - ansible-lint
controller_organizations:
  - name: "{{ lab['organization'] }}"
    description: "ACME Corp organization"
    state: present

controller_credentials:
  - name: "{{ lab['credential']['name'] }}"
    description: "{{ lab['credential']['name'] }}"
    organization: "{{ lab['organization'] }}"
    credential_type: Machine
    inputs:
      ssh_key_data: "{{ lookup('file', hostvars.localhost._ssh_tempdir.path + '/instruqt_lab') }}"

# Downloads EE to controller and mesh worker nodes
controller_execution_environments:
  - name: "{{ lab['execution_environment'] }}"
    image: registry.redhat.io/ansible-automation-platform-24/ee-supported-rhel8
    state: present
    pull: never

controller_projects:
  - name: "{{ lab['project']['name'] }}"
    organization: "{{ lab['organization'] }}"
    state: present
    scm_branch: "{{ lab['project']['repo']['branch'] }}"
    scm_clean: false
    scm_delete_on_update: false
    scm_type: git
    scm_update_on_launch: false
    scm_url: "{{ lab['project']['repo']['url'] }}"
    wait: true
    update_project: true

controller_inventories:
  - name: "{{ lab['jhb']['inventory']['name'] }}"
    organization: "{{ lab['organization'] }}"
    description: "Johannesburg. South Africa"
  - name: "{{ lab['raleigh']['inventory']['name'] }}"
    organization: "{{ lab['organization'] }}"
    description: "Raleigh data center. United States"

# controller_inventory_sources:
#   - name: JHB inventory source
#     organization: "{{ lab['organization'] }}"
#     source_project: "{{ lab['project']['name'] }}"
#     source_path: "{{ track_slug }}/inventories/jhb_inventory.ini"
#     source: scm
#     inventory: "{{ lab['jhb']['inventory']['name'] }}"
#     description: Johannesburg region inventory source
#     overwrite: true
#     overwrite_vars: true
#     update_cache_timeout: 0
#     wait: true
#   - name: Raleigh inventory source
#     organization: "{{ lab['organization'] }}"
#     source_project: "{{ lab['project']['name'] }}"
#     source_path: "{{ track_slug }}/inventories/raleigh_inventory.ini"
#     source: scm
#     inventory: "{{ lab['raleigh']['inventory']['name'] }}"
#     description: Raleigh data center inventory source
#     overwrite: true
#     overwrite_vars: true
#     update_cache_timeout: 0
#     wait: true

controller_hosts:
  - name: web.jhb.example.com
    inventory: "{{ lab['jhb']['inventory']['name'] }}"
    enabled: true
    variables:
      ansible_host: jhb-exec
  - name: web.ral.example.com
    inventory: "{{ lab['raleigh']['inventory']['name'] }}"
    enabled: true
    variables:
      ansible_host: raleigh-controller

controller_groups:
  - name: web
    inventory: "{{ lab['jhb']['inventory']['name'] }}"
    hosts:
      - web.jhb.example.com
  - name: automationcontroller
    inventory: "{{ lab['raleigh']['inventory']['name'] }}"
    hosts:
      - web.ral.example.com

controller_templates:
  - name: "Debug info"
    state: present
    description: Gather system information
    job_type: run
    playbook: "{{ track_slug }}/playbooks/debug_info.yml"
    execution_environment: "{{ lab['execution_environment'] }}"
    inventory: "{{ lab['raleigh']['inventory']['name'] }}"
    verbosity: 0
    credentials:
      - "{{ lab['credential']['name'] }}"
    project: "{{ lab['project']['name'] }}"
    ask_inventory_on_launch: true
    become_enabled: false
    survey: {}
  - name: "Mesh route info"
    state: present
    description: Test automation mesh overlay network
    job_type: run
    playbook: "{{ track_slug }}/playbooks/mesh_traceroute.yml"
    execution_environment: "{{ lab['execution_environment'] }}"
    inventory: "{{ lab['raleigh']['inventory']['name'] }}"
    extra_vars:
      mesh_target: jhb-exec
    verbosity: 0
    credentials:
      - "{{ lab['credential']['name'] }}"
    project: "{{ lab['project']['name'] }}"
    ask_inventory_on_launch: true
    become_enabled: true
    survey: {}

controller_user_accounts:
  - user: "{{ student_username }}"
    password: "{{ student_password }}"
    is_superuser: true
    organization: "{{ lab['organization'] }}"
