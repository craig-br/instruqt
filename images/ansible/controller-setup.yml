---
- name: Download aap.tar.gz to install controller
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Get yourself some updated workshop roles
      ansible.builtin.command: ansible-galaxy collection install --verbose --force-with-deps ansible.workshops

    - command:
        cmd: echo {{ offline_token }} | sed 's/./& /g'

    - name: download aap
      vars:
        provided_sha_value: 7456b98f2f50e0e1d4c93fb4e375fe8a9174f397a5b1c0950915224f7f020ec4
      include_role:
        name: ansible.workshops.aap_download

- name: configures automation controller node
  hosts: all
  gather_facts: true
  become: true
  vars:
    admin_password: "ansible123!"
    aap_dir: "/home/{{ username }}/aap_install"
    username: "{{ ansible_user }}"
    student_username: student
    student_password: learn_ansible
    # Registry to pull EE images from during installation
    ee_registry_name: "registry.redhat.io"
    # List of execution environments to download during controller installation:
    ee_images:
      - "{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest"
      - "{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest"
      - "{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest"
    ee_default_image: "{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest"

  tasks:
    - name: install automation controller
      vars:
        controllerinstall: "true"
      ansible.builtin.include_role:
        name: ansible.workshops.control_node

    - name: Include common user tasks
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/common/5_configure_users.yml"

    - name: install workshop dependencies
      ansible.builtin.command: "ansible-galaxy collection install --force-with-deps ansible.workshops  -p /usr/share/ansible/collections"

    # Packages needed for Instruqt challenges
    - name: Install controller lab packages for controller lab
      ansible.builtin.dnf:
        state: present
        enablerepo: "ansible-automation-platform-2.3-for-rhel-9-x86_64-rpms"
        name:
          # - automation-controller-cli sean removed on May 16th b/c it won't install
          - httpd
          - subversion
          - python3-setuptools

    # googlecompute.automation-controller9: TASK [Install controller lab packages for controller lab] **********************
    # googlecompute.automation-controller9: fatal: [controller]: FAILED! => changed=false
    # googlecompute.automation-controller9:   failures: []
    # googlecompute.automation-controller9:   msg: |-
    # googlecompute.automation-controller9:     Depsolve Error occurred:
    # googlecompute.automation-controller9:      Problem: conflicting requests
    # googlecompute.automation-controller9:       - nothing provides python39-setuptools needed by automation-controller-cli-4.3.8-1.el8ap.x86_64
    # googlecompute.automation-controller9:       - nothing provides python39-pyyaml needed by automation-controller-cli-4.3.8-1.el8ap.x86_64

    - name: Installl pip packages
      ansible.builtin.pip:
        name:
          - python-jenkins
          - jmespath
        state: present
      become: true
  
    - name: install code server
      ansible.builtin.include_role:
        name: ansible.workshops.code_server

    - name: Include common repo and image cleanup tasks
      ansible.builtin.include_tasks:
        file: "{{ playbook_dir }}/common/10_image_cleanup.yml"

    - name: copy setup-scripts to control node
      ansible.builtin.copy:
        src: ./setup-scripts
        dest: /tmp

- name: Playbook to configure ansible controller post installation
  hosts: all
  vars:
    tmm_controller: "{{ lookup('env', 'TMM_CONTROLLER') }}"
    tmm_controller_token: "{{ lookup('env', 'TMM_CONTROLLER_TOKEN') }}"
    controller_hostname: "https://{{ ansible_host }}"
    controller_username: "admin"
    controller_password: "ansible123!"
    controller_validate_certs: false
    controller_user_accounts:
      - user: student
        is_superuser: false
        password: learn_ansible
    controller_credentials:
      - name: Automation Controller
        description: Token for TMM Automation Controller
        organization: Default
        credential_type: Red Hat Ansible Automation Platform
        inputs:
          host: "{{ tmm_controller }}"
          oauth_token: "{{ tmm_controller_token }}"
    controller_credential_types:
      - name: "servicenow.itsm"
        description: "servicenow.itsm credential"
        kind: cloud
        inputs:
          fields:
            - id: SN_HOST
              type: string
              label: SNOW Instance
            - id: SN_USERNAME
              type: string
              label: SNOW Username
            - id: SN_PASSWORD
              type: string
              secret: true
              label: SNOW Password
          required:
            - SN_HOST
            - SN_USERNAME
            - SN_PASSWORD
        injectors:
          env:
            SN_HOST: "{% raw %}{{ '{{' }} SN_HOST {{ '}}' }}{% endraw %}"
            SN_USERNAME: "{% raw %}{{ '{{' }} SN_USERNAME {{ '}}' }}{% endraw %}"
            SN_PASSWORD: "{% raw %}{{ '{{' }} SN_PASSWORD {{ '}}' }}{% endraw %}"

  tasks:
     - {include_role: {name: redhat_cop.controller_configuration.users}, when: controller_user_accounts is defined}
     - {include_role: {name: redhat_cop.controller_configuration.credential_types}, when: controller_credential_types is defined}
     - {include_role: {name: redhat_cop.controller_configuration.credentials}, when: controller_credentials is defined}

    # - {include_role: redhat_cop.controller_configuration.users, when: controller_user_accounts is defined}
    # - {role: redhat_cop.controller_configuration.credential_types, when: controller_credential_types is defined}
    # - {role: redhat_cop.controller_configuration.credentials, when: controller_credentials is defined}
